# -*- mode: ruby -*-
# vi: set ft=ruby :
# Vagrant file config to get the latest smith and its dependencies 
# put this in your project folder along with the provision.sh file referenced below.
# last tested to work with vagrant version 2.2.9 and Virtualbox 6.1.32 

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://app.vagrantup.com/boxes/search
  config.vm.box = "ubuntu/jammy64"

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  config.vbguest.allow_downgrade = true
  # config.vbguest.no_install = true


  # we turn on the box update warning.
  config.vm.box_check_update = true

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which is generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/smith", type: "virtualbox"
  
  # If you want you can also map the parent folder of all your local font working copies:
  # for macOS users:
  # config.vm.synced_folder "/Users/username/work/fonts/", "/smith", type: "virtualbox"
  # for Windows users:
  # config.vm.synced_folder "C:\\Users\\username\\work\\fonts\\", "/smith", type: "virtualbox"
  # for Ubuntu users:
  # config.vm.synced_folder "/home/username/work/fonts/", "/smith", type: "virtualbox"

  # set up a distinguishable hostname
  config.vm.hostname = "smith-jammy"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
    vb.customize [ "modifyvm", :id, "--uart1", "0x3F8", "4" ]

    # Do not display the VirtualBox GUI when booting the machine
    vb.gui = false 

    # Customize the amount of memory on the VM:
    vb.memory = "7000"

    # Customize the amount of CPUs allocated:
    vb.cpus = 4

  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL

    # uncomment if you don't want colours 
    # export VAGRANT_NO_COLOR="true"
    
    # turning off some automated apt-related stuff 
    systemctl stop apt-daily.service # disable run when system boot
    systemctl disable apt-daily.service # disable run when system boot
    systemctl stop apt-daily.timer   # disable timer run 
    systemctl disable apt-daily.timer   # disable timer run 

    lsb_release -d

    locale-gen en_US.UTF-8
    update-locale LANG=en_US.UTF-8
    sed -i -E 's/^(\s*AcceptEnv\b)/#\1/' /etc/ssh/sshd_config

    apt-get update -q -y

    apt-get install --no-install-recommends -q -y less vim-nox htop tree git wget curl bash-completion python3-software-properties ntpdate ntp

    touch "/home/vagrant/.hushlogin"

    SHELL

    config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

    config.ssh.keys_only = true
	
    config.vm.boot_timeout = 300


  # install and configure the smith-specific components
    config.vm.provision :shell, privileged: false, :path => "provision.sh"


end
